@charset "UTF-8";

* {
    padding: 0;
    margin: 0;
}

#wrap {
    width:minmax(400px,max-content);
    background-color: rgb(179, 177, 177);
    border-radius: 8px;
}

#menu {
    list-style: none;
    text-align: center;
    
}

.item {
    display: inline-block;
}

a {
    text-decoration: none;
    color: #ffffff;
    width: 120px;
    display: block;
    text-transform: uppercase;
    font: normal bolder 1.2em monospace;
    padding: 15px;
}

a:hover {
    background: #c8c4c4;
    color: #000000;
    border-radius: 5px;
    transition: 0.3s;
}
.liel{
    display: inline;
}
a#dda{
    color: #000000;
}
div#ddc
    {
        display: flex;
        flex-direction: column;
        align-items: center;
/*
    display:flex;
    align-items:center;
    justify-content: center;
*/
        }
  
ol{
    margin: 0 50%;
}

/*
a{
    display: block;
    margin: auto;
}
*/
.container{
    display: grid; /*inline-grid = usa ao grid como comportamento inline, se adequando ao tamanho do elemento, como a tag <a> por exemplo*/
    /*justify-content: center;*/
    grid-template-columns: auto auto auto /*auto auto auto* ou  50px 100px auto --> vale para linhas(row) tb, grid row determinará a altura das linhas*/;
    /*grid-template-rows: auto auto auto;*/
   grid-gap:10px; /* linha depois coluna, definido no container. Caso queira definir a distancia entre as células no item, terá que usar  margin. grid-column-gap: 10px;  grid-row-gap: 10px;*/
    padding: 8px;
    border: 1px solid #a3a3a3;
    border-radius: 8px;  
}
.itemg{
background-color: #c8c4c4;
color: #ffffff;
padding: 8px;
border-radius: 8px;
text-align: center;
}
.item1{
    border: solid 1px #a3a3a3;
}

.together{
    grid-column: 1/3 ; /* grid-colimn-star:1; e grid-column-end:3; gri column não é inclusiva no end e sim exclusiva, o 3 não entra é um limite*/
    /*grid-row: _1/_2 ;   o mesmo vale para row.
    Podemos informar a propriedade span para o column "1/span 3, vai se expandir e chegar até o 3*/
    grid-row: 1/3;
}
.area{ /* m/n i/j , onde m=linha inicial ; i=linha final ; n=coluna inicial ; j=coluna final NÃO ESQUECER QUE n,j precisa de adicionar 1 pois são excludentes, se quer cehgar ao 2 , tem que colocar 3*/
    grid-area:1 / 1/ 1 / 3 ;
}
.area2{
    grid-area:2 / 1/ 4 / 3 ;
}
.area3{
    grid-area:2 / 4/ 4 / 6 ;
}
.cont{
    display: grid;
    grid-template-columns: auto auto auto auto auto;
    grid-gap: 10px;
    background-color: #7e7ee0;
    border: solid 2px #661aa3;
    border-radius: 8px;
    padding: 8px;
}
.item2{
    border: solid 1px #661aa3;
}



